[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "lnegc"
version = "0.1.0"
description = "Linguagem Natural Estruturada para Geração de Código"
readme = "README.md"
requires-python = ">=3.10"
license = "MIT"
keywords = ["code-generation", "natural-language", "automation"]
authors = [
    { name = "Franklin Ferreira", email = "franklin@lnegc.dev" },
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Software Development :: Code Generators",
]
dependencies = [
    "click>=8.1.0",
    "jinja2>=3.1.0",
    "pyyaml>=6.0.0",
    "rich>=13.0.0",
    "typer>=0.9.0",
]

[project.optional-dependencies]
dev = [
    "black>=24.0.0",
    "flake8>=7.0.0",
    "isort>=5.13.0",
    "mypy>=1.8.0",
    "pre-commit>=3.6.0",
    "pytest>=8.0.0",
    "pytest-cov>=4.1.0",
]

[project.urls]
Homepage = "https://lnegc.dev"
Documentation = "https://docs.lnegc.dev"
Repository = "https://github.com/franklinferre/LNEGC"
Issues = "https://github.com/franklinferre/LNEGC/issues"

[project.scripts]
lnegc = "lnegc.src.cli:main"

[tool.black]
line-length = 88
target-version = ["py310"]
include = '\.pyi?$'

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true

[tool.pytest.ini_options]
minversion = "8.0"
addopts = "-ra -q --cov=lnegc --cov-report=xml --cov-report=term-missing"
testpaths = ["tests"] 